pipeline {
    agent any

    environment {
        GITHUB_STATUS_URL = "https://api.github.com/repos/Tyomnayark/midi-studio-app/statuses/${env.GIT_COMMIT}"
        ANDROID_HOME = '/usr/local/android-sdk'
        PATH = "${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools:${env.PATH}"
    }

    stages {
        stage('Cleanup Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Setup SSH Agent') {
            steps {
                script {
                    sshagent(['7f85d9b3-5608-42dd-ba41-c3c30925cdda']) {
                        sh 'echo "SSH Agent setup complete"'
                        sh 'ssh-add -l'
                    }
                }
            }
        }

        stage('Setup SDK') {
            steps {
                sh '''
                    echo "sdk.dir=${ANDROID_HOME}" > local.properties
                '''
            }
        }

        stage('Checkout') {
            steps {
                script {
                    if (env.BRANCH_NAME.startsWith("PR-")) {
                        def prNumber = env.BRANCH_NAME.replaceAll("PR-", "")
                        checkout([$class: 'GitSCM',
                            branches: [[name: "refs/pull/${prNumber}/head"]],
                            userRemoteConfigs: [[url: 'git@github.com:Tyomnayark/midi-studio-app.git', credentialsId: 'github-token-id']]
                        ])
                    } else {
                        checkout([$class: 'GitSCM',
                            branches: [[name: "*/${env.BRANCH_NAME}"]],
                            userRemoteConfigs: [[url: 'git@github.com:Tyomnayark/midi-studio-app.git', credentialsId: 'github-token-id']]
                        ])
                    }
                    env.GIT_COMMIT = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    echo "GIT_COMMIT set to: ${env.GIT_COMMIT}"
                }
            }
        }

        stage('Build') {
            steps {
                sh './gradlew assembleDebug'
            }
        }

        stage('Run Unit Tests') {
            steps {
                sh './gradlew test'
            }
        }

//         stage('Start Emulator') {
//             steps {
//                 script {
//                     sh 'emulator -avd my_avd -no-snapshot -no-audio -no-window &'
//                     sh 'adb wait-for-device'
//                     sh 'adb devices'
//                 }
//             }
//         }

        stage('Run Instrumented Tests') {
            steps {
                sh './gradlew connectedAndroidTest'
            }
        }

//         stage('Stop Emulator') {
//             steps {
//                 script {
//                     sh 'adb emu kill'
//                 }
//             }
//         }
    }

    post {
        success {
            script {
                echo "GIT_COMMIT: ${env.GIT_COMMIT}"
                if (env.GIT_COMMIT == null || env.GIT_COMMIT == '') {
                    echo 'Error: GIT_COMMIT is null or empty. Skipping GitHub status update.'
                } else {
                    withCredentials([string(credentialsId: 'github-token-id', variable: 'GITHUB_TOKEN')]) {
                        def response = httpRequest(
                            url: "https://api.github.com/repos/Tyomnayark/midi-studio-app/statuses/${env.GIT_COMMIT}",
                            httpMode: 'POST',
                            contentType: 'APPLICATION_JSON',
                            requestBody: """
                            {
                                "state": "success",
                                "target_url": "${env.BUILD_URL}",
                                "description": "Build succeeded",
                                "context": "continuous-integration/jenkins"
                            }
                            """,
                            customHeaders: [[name: 'Authorization', value: "Bearer ${GITHUB_TOKEN}"]]
                        )
                        echo "GitHub status updated: ${response}"
                    }
                }
            }
        }

        failure {
            script {
                echo "Build failed, GIT_COMMIT: ${env.GIT_COMMIT}"
                withCredentials([string(credentialsId: 'github-token-id', variable: 'GITHUB_TOKEN')]) {
                    httpRequest(
                        url: "https://api.github.com/repos/Tyomnayark/midi-studio-app/statuses/${env.GIT_COMMIT}",
                        httpMode: 'POST',
                        contentType: 'APPLICATION_JSON',
                        requestBody: """
                        {
                            "state": "failure",
                            "target_url": "${env.BUILD_URL}",
                            "description": "Build failed",
                            "context": "continuous-integration/jenkins"
                        }
                        """,
                        customHeaders: [[name: 'Authorization', value: "Bearer ${GITHUB_TOKEN}"]]
                    )
                }
            }
        }
    }
}